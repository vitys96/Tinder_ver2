//
//  SettingsProtocols.swift
//  Tinder_Analog
//
//  Created Vitaly on 23.10.2019.
//  Copyright Â© 2019 Vitaly. All rights reserved.
//
//  Template generated by Sakhabaev Egor @Banck
//  https://github.com/Banck/Swift-viper-template-for-xcode
//

import UIKit

//MARK: Wireframe -
enum SettingsNavigationOption {
    case mainScreen
}

protocol SettingsWireframeInterface: class {
    func navigate(to option: SettingsNavigationOption)
}

//MARK: Presenter -
protocol SettingsPresenterInterface: class {

    var interactor: SettingsInteractorInput? { get set }
    func didSelectFotoPicker(button: UIButton)
    
    // MARK: - Lifecycle -
    func viewDidLoad()
    func viewWillAppear()
    func viewDidAppear()
    func viewWillDisappear()
    func viewDidDisappear()

}
extension SettingsPresenterInterface {
    func viewDidLoad() {/*leaves this empty*/}
    func viewWillAppear() {/*leaves this empty*/}
    func viewDidAppear() {/*leaves this empty*/}
    func viewWillDisappear() {/*leaves this empty*/}
    func viewDidDisappear() {/*leaves this empty*/}
}


//MARK: Interactor -
protocol SettingsInteractorOutput: class {

    /* Interactor -> Presenter */
    func fetchedUserData(userData: User?)
    func fetchedUserData(with error: Error)
    func fetchedUsersPhotos(userPhotos: [UIImage]?)
    func fetchedUsersPhotos(with error: Error)
}

protocol SettingsInteractorInput: class {

    var presenter: SettingsInteractorOutput?  { get set }
    func fetchUserData()
    func fetchUserPhotos(imageUrls: [String])
    /* Presenter -> Interactor */
}

//MARK: View -
protocol SettingsView: class, Alertable, Loadable {

    var presenter: SettingsPresenterInterface?  { get set }
    
    func showCameraManager(button: UIButton, completion: ((UIImage?) -> Void)?)
    func displayTopViewRows(data: [SettingTopCell.Data])
    func displayMainRows(sectionsData: [(rowData: TextFieldCell.Data, sectionTitle: String)])
    /* Presenter -> ViewController */
}
