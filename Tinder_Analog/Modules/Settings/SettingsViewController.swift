//
//  SettingsViewController.swift
//  Tinder_Analog
//
//  Created Vitaly on 23.10.2019.
//  Copyright Â© 2019 Vitaly. All rights reserved.
//
//  Template generated by Sakhabaev Egor @Banck
//  https://github.com/Banck/Swift-viper-template-for-xcode
//

import UIKit
import TableKit

class SettingsViewController: UIViewController {
    // MARK: - Properties
    var presenter: SettingsPresenterInterface?
    var tableDirector: TableDirector!
    
    @IBOutlet weak var tableView: UITableView! {
        didSet {
            tableDirector = TableDirector(tableView: tableView)
        }
    }
    
    // MARK: - Lifecycle -
    
    override func viewWillAppear(_ animated: Bool) {
        presenter?.viewWillAppear()
    }
    override func viewDidLoad() {
        super.viewDidLoad()
        configureUI()
    }
    
}

extension SettingsViewController {
    private func configureUI() {
        navigationItem.title = "Settings"
        navigationController?.navigationBar.prefersLargeTitles = true
        navigationItem.rightBarButtonItem = UIBarButtonItem(barButtonSystemItem: .save, target: self, action: nil)
        tableView.separatorColor = .cellSeparator
        tableView.backgroundColor = .background
        tableView.allowsSelection = false
        tableView.tableFooterView = UIView()
    }
}

// MARK: - SettingsView
extension SettingsViewController: SettingsView {
    func displayTopViewRows(data: [SettingTopCell.Data]) {
        let topSection = TableSection(headerTitle: "Photos", footerTitle: nil)
        
        let rowSelectionAction = TableRowAction<SettingTopCell>("switchValueChanged") { [weak self] cellOption in
            guard
                let self = self,
                let button = cellOption.userInfo?["button"] as? UIButton
                else { return }
            self.presenter?.didSelectFotoPicker(button: button)
        }
        let topViewRow = data.map{ TableRow<SettingTopCell>(item: $0, actions: [rowSelectionAction])}
        topSection.append(rows: topViewRow)
        tableDirector.insert(section: topSection, atIndex: 0)
        tableDirector.reload()
    }
    
    func displayMainRows(sectionsData: [(rowData: TextFieldCell.Data, sectionTitle: String)]) {
        let sections: [TableSection] = sectionsData.map {
            let section = TableSection(headerTitle: $0.sectionTitle, footerTitle: nil)
            let row = TableRow<TextFieldCell>(item: $0.rowData, actions: [])
            section.append(row: row)
            return section
        }
        tableDirector += sections
        tableDirector.reload()
    }
    
    func showCameraManager(button: UIButton, completion: ((UIImage?) -> Void)?) {
        CameraManager.shared.showActionSheet(vc: self, button: button, completion: completion)
    }
}
