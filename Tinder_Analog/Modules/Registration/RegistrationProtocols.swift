//
//  RegistrationProtocols.swift
//  Tinder_Analog
//
//  Created Vitaly on 12.10.2019.
//  Copyright Â© 2019 Vitaly. All rights reserved.
//
//  Template generated by Sakhabaev Egor @Banck
//  https://github.com/Banck/Swift-viper-template-for-xcode
//

import UIKit

//MARK: Wireframe -
enum RegistrationNavigationOption {
    //    case firstModule
    //    case secondModule(someData)
}

protocol RegistrationWireframeInterface: class {
    func navigate(to option: RegistrationNavigationOption)
}

//MARK: Presenter -
protocol RegistrationPresenterInterface: class {

    var interactor: RegistrationInteractorInput? { get set }
    func createUser(userModel: RegistrationViewModel)
    func didSelectFotoPicker()
    // MARK: - Lifecycle -
    func viewDidLoad()
    func viewWillAppear()
    func viewDidAppear()
    func viewWillDisappear()
    func viewDidDisappear()

}
extension RegistrationPresenterInterface {
    func viewDidLoad() {/*leaves this empty*/}
    func viewWillAppear() {/*leaves this empty*/}
    func viewDidAppear() {/*leaves this empty*/}
    func viewWillDisappear() {/*leaves this empty*/}
    func viewDidDisappear() {/*leaves this empty*/}
}


//MARK: Interactor -
protocol RegistrationInteractorOutput: class {
    func failureRegistration(with error: String)
    func fetchedRegistration()
    func finallyFethed()
    /* Interactor -> Presenter */
}

protocol RegistrationInteractorInput: class {

    var presenter: RegistrationInteractorOutput?  { get set }
    func createUser(userModel: RegistrationViewModel)
    /* Presenter -> Interactor */
}

//MARK: View -
protocol RegistrationView: class, Alertable, Loadable {

    var presenter: RegistrationPresenterInterface?  { get set }
    func showCameraManager(completion: ((UIImage?) -> Void)?)
    func displayImage(_ image: UIImage)
    /* Presenter -> ViewController */
}
