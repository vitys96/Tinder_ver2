//
//  RegistrationPresenter.swift
//  Tinder_Analog
//
//  Created Vitaly on 12.10.2019.
//  Copyright © 2019 Vitaly. All rights reserved.
//
//  Template generated by Sakhabaev Egor @Banck
//  https://github.com/Banck/Swift-viper-template-for-xcode
//

import UIKit

class RegistrationPresenter {
    // MARK: - Properties
    weak private var view: RegistrationView?
    var interactor: RegistrationInteractorInput?
    private let router: RegistrationWireframeInterface
    
    // MARK: - Initialization and deinitialization -
    init(interface: RegistrationView, interactor: RegistrationInteractorInput?, router: RegistrationWireframeInterface) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
}

// MARK: - RegistrationPresenterInterface -
extension RegistrationPresenter: RegistrationPresenterInterface {
    func didSelectFotoPicker() {
        self.view?.showCameraManager(completion: { [weak self] (image) in
            guard let self = self, let image = image else { return }
            self.view?.displayImage(image.withRenderingMode(.alwaysOriginal))
        })
    }
    
    func createUser(userModel: RegistrationViewModel) {
        self.view?.startLoading()
        guard userModel.image != nil else {
            self.failureRegistration(with: "Пожалуйста, загрузите фотографию")
            return
        }
        self.interactor?.createUser(userModel: userModel)
    }
}

// MARK: - RegistrationInteractorOutput -
extension RegistrationPresenter: RegistrationInteractorOutput {
    func fetchedRegistration() {
        self.view?.stopLoading()
        view?.showSuccessAlert(labelText: nil, detailText: nil)
    }
    
    
    func failureRegistration(with error: String) {
        self.view?.stopLoading()
        view?.showErrorAlert(labelText: nil, detailText: error)
    }
    func finallyFethed() {
        view?.stopLoading()
    }
}

